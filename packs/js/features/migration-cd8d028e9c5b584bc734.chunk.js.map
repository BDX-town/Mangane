{"version":3,"file":"packs/js/features/migration-cd8d028e9c5b584bc734.chunk.js","mappings":"+JAAiIA,EAAOC,E,2jBAC3CC,GAAS,QAAe,CAACC,QAAQ,CAAC,GAAK,mBAAmB,eAAiB,qBAAqBC,OAAO,CAAC,GAAK,mBAAmB,eAAiB,kBAAkBC,mBAAmB,CAAC,GAAK,iCAAiC,eAAiB,+BAA+BC,gBAAgB,CAAC,GAAK,8BAA8B,eAAiB,6BAA6BC,eAAe,CAAC,GAAK,8BAA8B,eAAiB,6BAA6BC,qBAAqB,CAAC,GAAK,oCAAoC,eAAiB,mBAAmBC,0BAA0B,CAAC,GAAK,0CAA0C,eAAiB,sBAA0BC,GAAgB,SAAUC,CAAKX,GAAO,SAAmBC,EAAO,YAAgD,gCAAuBW,YAAS,K,OAAE,OAAgB,EAAK,QAAQ,CAACC,cAAc,GAAGC,SAAS,GAAGC,WAAU,KAAQ,OAAgB,EAAK,qBAAoB,SAAAC,G,MAAI,EAAKC,WAAQ,MAAGD,EAAEE,OAAOC,MAAMH,EAAEE,OAAOE,MAAK,QAAM,OAAgB,EAAK,aAAY,WAAK,EAAKH,SAAS,CAACJ,cAAc,GAAGC,SAAS,SAAQ,OAAgB,EAAK,gBAAe,SAAAE,GAAS,MAAyB,EAAKK,MAA7BR,EAAa,gBAACC,EAAQ,WAAkB,EAAgB,EAAKQ,MAApBC,EAAQ,WAACC,EAAI,OAA6C,OAAhC,EAAKP,SAAS,CAACF,WAAU,IAAcQ,GAAS,QAAYV,EAAcC,IAAWW,MAAK,WAAK,EAAKC,YAAYH,EAAS,aAAiBC,EAAKG,cAAczB,EAASG,yBAAyBuB,OAAM,SAAAC,GAAQN,EAAS,WAAeC,EAAKG,cAAczB,EAASI,sBAAsBmB,MAAK,WAAK,EAAKR,SAAS,CAACF,WAAU,U,EAA04C,OAAlnE,OAAuvB,YAAAe,OAAA,WAAe,IAAAN,EAAMO,KAAKT,MAAK,KAAC,OAAmB,OAAK,KAAO,CAACU,MAAMR,EAAKG,cAAczB,EAASC,eAAU,GAAoB,OAAK,KAAK,CAAC8B,SAASF,KAAKG,mBAAc,GAAoB,OAAK,KAAK,CAACC,MAAM,cAAS,GAAoB,OAAK,IAAiB,CAACC,GAAG,iBAAiBC,eAAe,qJAAqJC,OAAO,CAACC,MAAkB,OAAK,KAAK,CAACC,UAAU,4GAA4GC,GAAG,0BAAqB,GAAoB,OAAK,IAAiB,CAACL,GAAG,sBAAsBC,eAAe,kCAA8C,OAAK,KAAU,CAACK,UAAUlB,EAAKG,cAAczB,EAASK,sBAAiB,GAAoB,OAAK,KAAM,CAACY,KAAK,gBAAgBwB,YAAYnB,EAAKG,cAAczB,EAASM,sBAAsBoC,SAASb,KAAKc,kBAAkBzB,MAAMW,KAAKV,MAAMR,cAAciC,UAAS,MAAqB,OAAK,KAAU,CAACJ,UAAUlB,EAAKG,cAAczB,EAASO,iCAA4B,GAAoB,OAAK,KAAM,CAACsC,KAAK,WAAW5B,KAAK,WAAWyB,SAASb,KAAKc,kBAAkBzB,MAAMW,KAAKV,MAAMP,SAASgC,UAAS,MAAqB,OAAK,KAAY,QAAG,GAAoB,OAAK,KAAO,CAACX,MAAM,UAAUa,KAAKxB,EAAKG,cAAczB,EAASE,QAAQ6C,QAAQlB,KAAKG,mBAAmB,EAA3oE,CAAyB,OAAonE,OAAgBjC,EAAQ,YAAY,CAACsB,SAAS,oBAA0BC,KAAK,wBAAzuExB,EAAuwEC,KAAWD,IAASA","sources":["webpack://mangane-fe/./app/soapbox/features/migration/index.js"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";var _dec,_class,_class2;import\"core-js/modules/web.dom-collections.iterator.js\";import PropTypes from'prop-types';import React from'react';import ImmutablePureComponent from'react-immutable-pure-component';import{defineMessages,FormattedMessage,injectIntl}from'react-intl';import{connect}from'react-redux';import{Link}from'react-router-dom';import{moveAccount}from'soapbox/actions/security';import snackbar from'soapbox/actions/snackbar';// import Column from 'soapbox/features/ui/components/column';\nimport{Button,Column,Form,FormActions,FormGroup,Input,Text}from'soapbox/components/ui';const messages=defineMessages({heading:{\"id\":\"column.migration\",\"defaultMessage\":\"Account migration\"},submit:{\"id\":\"migration.submit\",\"defaultMessage\":\"Move followers\"},moveAccountSuccess:{\"id\":\"migration.move_account.success\",\"defaultMessage\":\"Account successfully moved.\"},moveAccountFail:{\"id\":\"migration.move_account.fail\",\"defaultMessage\":\"Account migration failed.\"},acctFieldLabel:{\"id\":\"migration.fields.acct.label\",\"defaultMessage\":\"Handle of the new account\"},acctFieldPlaceholder:{\"id\":\"migration.fields.acct.placeholder\",\"defaultMessage\":\"username@domain\"},currentPasswordFieldLabel:{\"id\":\"migration.fields.confirm_password.label\",\"defaultMessage\":\"Current password\"}});let Migration=(_dec=connect(),_dec(_class=injectIntl(_class=(_class2=class Migration extends ImmutablePureComponent{constructor(){super(...arguments);_defineProperty(this,\"state\",{targetAccount:'',password:'',isLoading:false});_defineProperty(this,\"handleInputChange\",e=>{this.setState({[e.target.name]:e.target.value});});_defineProperty(this,\"clearForm\",()=>{this.setState({targetAccount:'',password:''});});_defineProperty(this,\"handleSubmit\",e=>{const{targetAccount,password}=this.state;const{dispatch,intl}=this.props;this.setState({isLoading:true});return dispatch(moveAccount(targetAccount,password)).then(()=>{this.clearForm();dispatch(snackbar.success(intl.formatMessage(messages.moveAccountSuccess)));}).catch(error=>{dispatch(snackbar.error(intl.formatMessage(messages.moveAccountFail)));}).then(()=>{this.setState({isLoading:false});});});}render(){const{intl}=this.props;return/*#__PURE__*/_jsx(Column,{label:intl.formatMessage(messages.heading)},void 0,/*#__PURE__*/_jsx(Form,{onSubmit:this.handleSubmit},void 0,/*#__PURE__*/_jsx(Text,{theme:\"muted\"},void 0,/*#__PURE__*/_jsx(FormattedMessage,{id:\"migration.hint\",defaultMessage:\"This will move your followers to the new account. No other data will be moved. To perform migration, you need to {link} on your new account first.\",values:{link:/*#__PURE__*/_jsx(Link,{className:\"hover:underline text-primary-600 dark:text-primary-400 hover:text-primary-800 dark:hover:text-primary-500\",to:\"/settings/aliases\"},void 0,/*#__PURE__*/_jsx(FormattedMessage,{id:\"migration.hint.link\",defaultMessage:\"create an account alias\"}))}})),/*#__PURE__*/_jsx(FormGroup,{labelText:intl.formatMessage(messages.acctFieldLabel)},void 0,/*#__PURE__*/_jsx(Input,{name:\"targetAccount\",placeholder:intl.formatMessage(messages.acctFieldPlaceholder),onChange:this.handleInputChange,value:this.state.targetAccount,required:true})),/*#__PURE__*/_jsx(FormGroup,{labelText:intl.formatMessage(messages.currentPasswordFieldLabel)},void 0,/*#__PURE__*/_jsx(Input,{type:\"password\",name:\"password\",onChange:this.handleInputChange,value:this.state.password,required:true})),/*#__PURE__*/_jsx(FormActions,{},void 0,/*#__PURE__*/_jsx(Button,{theme:\"primary\",text:intl.formatMessage(messages.submit),onClick:this.handleSubmit}))));}},_defineProperty(_class2,\"propTypes\",{dispatch:PropTypes.func.isRequired,intl:PropTypes.object.isRequired}),_class2))||_class)||_class);export{Migration as default};"],"names":["_class","_class2","messages","heading","submit","moveAccountSuccess","moveAccountFail","acctFieldLabel","acctFieldPlaceholder","currentPasswordFieldLabel","Migration","_dec","arguments","targetAccount","password","isLoading","e","setState","target","name","value","state","props","dispatch","intl","then","clearForm","formatMessage","catch","error","render","this","label","onSubmit","handleSubmit","theme","id","defaultMessage","values","link","className","to","labelText","placeholder","onChange","handleInputChange","required","type","text","onClick"],"sourceRoot":""}