{"version":3,"file":"packs/js/features/community_timeline-da8fa4bae025efd3d870.chunk.js","mappings":"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","sources":["webpack://mangane-fe/./app/soapbox/features/community_timeline/index.tsx"],"sourcesContent":["var _jsxFileName = \"/home/runner/work/Mangane/Mangane/app/soapbox/features/community_timeline/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport { connectCommunityStream } from 'soapbox/actions/streaming';\nimport { expandCommunityTimeline } from 'soapbox/actions/timelines';\nimport PullToRefresh from 'soapbox/components/pull-to-refresh';\nimport SubNavigation from 'soapbox/components/sub_navigation';\nimport { Column } from 'soapbox/components/ui';\nimport { useAppDispatch, useAppSelector, useSettings } from 'soapbox/hooks';\nimport Timeline from '../ui/components/timeline';\nconst messages = defineMessages({\n  title: {\n    \"id\": \"column.community\",\n    \"defaultMessage\": \"Local timeline\"\n  }\n});\n\nconst CommunityTimeline = () => {\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n  const instance = useAppSelector(state => state.instance);\n  const settings = useSettings();\n  const onlyMedia = settings.getIn(['community', 'other', 'onlyMedia']);\n  const timelineId = 'community';\n\n  const handleLoadMore = maxId => {\n    dispatch(expandCommunityTimeline({\n      maxId,\n      onlyMedia\n    }));\n  };\n\n  const handleRefresh = () => {\n    return dispatch(expandCommunityTimeline({\n      onlyMedia\n    }));\n  };\n\n  useEffect(() => {\n    dispatch(expandCommunityTimeline({\n      onlyMedia\n    }));\n    const disconnect = dispatch(connectCommunityStream({\n      onlyMedia\n    }));\n    return () => {\n      disconnect();\n    };\n  }, [onlyMedia]);\n  return /*#__PURE__*/React.createElement(Column, {\n    label: intl.formatMessage(messages.title),\n    transparent: true,\n    withHeader: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-4 pt-4 sm:p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SubNavigation, {\n    message: instance.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PullToRefresh, {\n    onRefresh: handleRefresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Timeline, {\n    scrollKey: \"\".concat(timelineId, \"_timeline\"),\n    timelineId: \"\".concat(timelineId).concat(onlyMedia ? ':media' : ''),\n    onLoadMore: handleLoadMore,\n    emptyMessage: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"empty_column.community\",\n      defaultMessage: \"The local timeline is empty. Write something publicly to get the ball rolling!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }),\n    divideType: \"space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CommunityTimeline;"],"names":[],"sourceRoot":""}