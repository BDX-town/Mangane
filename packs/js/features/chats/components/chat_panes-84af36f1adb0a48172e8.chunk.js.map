{"version":3,"file":"packs/js/features/chats/components/chat_panes-84af36f1adb0a48172e8.chunk.js","mappings":"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","sources":["webpack://mangane-fe/./app/soapbox/features/chats/components/audio-toggle.tsx","webpack://mangane-fe/./app/soapbox/features/chats/components/chat-window.tsx","webpack://mangane-fe/./app/soapbox/features/chats/components/chat-panes.tsx"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import React from'react';import{defineMessages,useIntl}from'react-intl';import{useDispatch}from'react-redux';import Toggle from'react-toggle';import{changeSetting,getSettings}from'soapbox/actions/settings';import{useAppSelector}from'soapbox/hooks';const messages=defineMessages({switchOn:{\"id\":\"chats.audio_toggle_on\",\"defaultMessage\":\"Audio notification on\"},switchOff:{\"id\":\"chats.audio_toggle_off\",\"defaultMessage\":\"Audio notification off\"}});const AudioToggle=_ref=>{let{showLabel}=_ref;const dispatch=useDispatch();const intl=useIntl();const checked=useAppSelector(state=>!!getSettings(state).getIn(['chats','sound']));const handleToggleAudio=()=>{dispatch(changeSetting(['chats','sound'],!checked));};const id='chats-audio-toggle';const label=intl.formatMessage(checked?messages.switchOff:messages.switchOn);return/*#__PURE__*/_jsx(\"div\",{className:\"audio-toggle react-toggle--mini\"},void 0,/*#__PURE__*/_jsx(\"div\",{className:\"setting-toggle\",\"aria-label\":label},void 0,/*#__PURE__*/_jsx(Toggle,{id:id,checked:checked,onChange:handleToggleAudio// onKeyDown={this.onKeyDown}\n}),showLabel&&/*#__PURE__*/_jsx(\"label\",{htmlFor:id,className:\"setting-toggle__label\"},void 0,label)));};export default AudioToggle;","import _jsx from\"@babel/runtime/helpers/esm/jsx\";import React,{useEffect,useRef}from'react';import{Link}from'react-router-dom';import{closeChat,toggleChat}from'soapbox/actions/chats';import Avatar from'soapbox/components/avatar';import HoverRefWrapper from'soapbox/components/hover_ref_wrapper';import IconButton from'soapbox/components/icon_button';import{HStack,Counter}from'soapbox/components/ui';import{useAppSelector,useAppDispatch}from'soapbox/hooks';import{makeGetChat}from'soapbox/selectors';import{getAcct}from'soapbox/utils/accounts';import{displayFqn as getDisplayFqn}from'soapbox/utils/state';import ChatBox from'./chat-box';const getChat=makeGetChat();/** Floating desktop chat window. */const ChatWindow=_ref=>{let{idx,chatId,windowState}=_ref;const dispatch=useAppDispatch();const displayFqn=useAppSelector(getDisplayFqn);const chat=useAppSelector(state=>{const chat=state.chats.items.get(chatId);return chat?getChat(state,chat.toJS()):undefined;});const inputElem=useRef(null);const handleChatClose=chatId=>{return()=>{dispatch(closeChat(chatId));};};const handleChatToggle=chatId=>{return()=>{dispatch(toggleChat(chatId));};};const handleInputRef=el=>{inputElem.current=el;};const focusInput=()=>{var _inputElem$current;(_inputElem$current=inputElem.current)===null||_inputElem$current===void 0?void 0:_inputElem$current.focus();};useEffect(()=>{if(windowState==='open'){focusInput();}},[windowState]);if(!chat)return null;const account=chat.account;const right=285*(idx+1)+20;const unreadCount=chat.unread;const unreadIcon=/*#__PURE__*/_jsx(\"div\",{className:\"mr-2 flex-none\"},void 0,/*#__PURE__*/_jsx(Counter,{count:unreadCount}));const avatar=/*#__PURE__*/_jsx(HoverRefWrapper,{accountId:account.id},void 0,/*#__PURE__*/_jsx(Link,{to:\"/@\".concat(account.acct)},void 0,/*#__PURE__*/_jsx(Avatar,{account:account,size:18})));return/*#__PURE__*/_jsx(\"div\",{className:\"pane pane--\".concat(windowState),style:{right:\"\".concat(right,\"px\")}},void 0,/*#__PURE__*/_jsx(HStack,{space:2,className:\"pane__header\"},void 0,unreadCount>0?unreadIcon:avatar,/*#__PURE__*/_jsx(\"button\",{className:\"pane__title\",onClick:handleChatToggle(chat.id)},void 0,\"@\",getAcct(account,displayFqn)),/*#__PURE__*/_jsx(\"div\",{className:\"pane__close\"},void 0,/*#__PURE__*/_jsx(IconButton,{src:require('@tabler/icons/x.svg'),title:\"Close chat\",onClick:handleChatClose(chat.id)}))),/*#__PURE__*/_jsx(\"div\",{className:\"pane__content\"},void 0,/*#__PURE__*/_jsx(ChatBox,{chatId:chat.id,onSetInputRef:handleInputRef})));};export default ChatWindow;","import _jsx from\"@babel/runtime/helpers/esm/jsx\";import{List as ImmutableList}from'immutable';import React from'react';import{defineMessages,FormattedMessage,useIntl}from'react-intl';import{useHistory}from'react-router-dom';import{createSelector}from'reselect';import{openChat,launchChat,toggleMainWindow}from'soapbox/actions/chats';import{getSettings}from'soapbox/actions/settings';import AccountSearch from'soapbox/components/account_search';import{Counter}from'soapbox/components/ui';import AudioToggle from'soapbox/features/chats/components/audio-toggle';import{useAppDispatch,useAppSelector,useSettings}from'soapbox/hooks';import ChatList from'./chat-list';import ChatWindow from'./chat-window';const messages=defineMessages({searchPlaceholder:{\"id\":\"chats.search_placeholder\",\"defaultMessage\":\"Start a chat with\\u2026\"}});const getChatsUnreadCount=state=>{const chats=state.chats.items;return chats.reduce((acc,curr)=>acc+Math.min(curr.get('unread',0),1),0);};// Filter out invalid chats\nconst normalizePanes=function(chats){let panes=arguments.length>1&&arguments[1]!==undefined?arguments[1]:ImmutableList();return panes.filter(pane=>chats.get(pane.get('chat_id')));};const makeNormalizeChatPanes=()=>createSelector([state=>state.chats.items,state=>getSettings(state).getIn(['chats','panes'])],normalizePanes);const normalizeChatPanes=makeNormalizeChatPanes();const ChatPanes=()=>{const intl=useIntl();const dispatch=useAppDispatch();const history=useHistory();const panes=useAppSelector(state=>normalizeChatPanes(state));const mainWindowState=useSettings().getIn(['chats','mainWindow']);const unreadCount=useAppSelector(state=>getChatsUnreadCount(state));const handleClickChat=chat=>{dispatch(openChat(chat.id));};const handleSuggestion=accountId=>{dispatch(launchChat(accountId,history));};const handleMainWindowToggle=()=>{dispatch(toggleMainWindow());};const open=mainWindowState==='open';const mainWindowPane=/*#__PURE__*/_jsx(\"div\",{className:\"pane pane--main pane--\".concat(mainWindowState)},void 0,/*#__PURE__*/_jsx(\"div\",{className:\"pane__header\"},void 0,unreadCount>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mr-2 flex-none\"},void 0,/*#__PURE__*/_jsx(Counter,{count:unreadCount})),/*#__PURE__*/_jsx(\"button\",{className:\"pane__title\",onClick:handleMainWindowToggle},void 0,/*#__PURE__*/_jsx(FormattedMessage,{id:\"chat_panels.main_window.title\",defaultMessage:\"Chats\"})),/*#__PURE__*/_jsx(AudioToggle,{})),/*#__PURE__*/_jsx(\"div\",{className:\"pane__content\"},void 0,open&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/_jsx(ChatList,{onClickChat:handleClickChat}),/*#__PURE__*/_jsx(AccountSearch,{placeholder:intl.formatMessage(messages.searchPlaceholder),onSelected:handleSuggestion,resultsPosition:\"above\"}))));return/*#__PURE__*/_jsx(\"div\",{className:\"chat-panes\"},void 0,mainWindowPane,panes.map((pane,i)=>/*#__PURE__*/_jsx(ChatWindow,{idx:i,chatId:pane.get('chat_id'),windowState:pane.get('state')},pane.get('chat_id'))));};export default ChatPanes;"],"names":["messages","switchOn","switchOff","_ref","showLabel","dispatch","intl","useIntl","checked","state","getIn","id","label","formatMessage","className","onChange","htmlFor","getChat","idx","chatId","windowState","displayFqn","chat","chats","items","get","toJS","undefined","inputElem","useRef","useEffect","_inputElem$current","current","focus","account","right","unreadCount","unread","unreadIcon","count","avatar","accountId","to","concat","acct","size","style","space","onClick","handleChatToggle","src","title","handleChatClose","onSetInputRef","el","searchPlaceholder","normalizeChatPanes","panes","arguments","length","filter","pane","history","mainWindowState","reduce","acc","curr","Math","min","getChatsUnreadCount","open","mainWindowPane","defaultMessage","onClickChat","placeholder","onSelected","resultsPosition","map","i"],"sourceRoot":""}