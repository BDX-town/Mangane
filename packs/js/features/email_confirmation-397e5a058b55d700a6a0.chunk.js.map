{"version":3,"file":"packs/js/features/email_confirmation-397e5a058b55d700a6a0.chunk.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,sBAsEiC;AAtEjC,IAAI,YAAY,GAAG,qFAAqF,CAAC;AAChD;AACP;AACnB;AACsB;AACT;AACmB;AACf;AACA;AACD;AACU;AACzD,IAAM,QAAQ,GAAG;IACf,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;IAClB,IAAI,EAAE,MAAM;CACb,CAAC;AACF,IAAM,QAAQ,GAAG,0DAAc,CAAC;IAC9B,OAAO,EAAE;QACP,IAAI,EAAE,4BAA4B;QAClC,gBAAgB,EAAE,gCAAgC;KACnD;CACF,CAAC,CAAC;AACH,IAAM,KAAK,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;AAEpF,IAAM,iBAAiB,GAAG;IACxB,IAAM,IAAI,GAAG,sDAAO,EAAE,CAAC;IACvB,IAAM,QAAQ,GAAG,6DAAc,EAAE,CAAC;IAC5B,SAAsB,2CAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAlD,MAAM,UAAE,SAAS,QAAiC,CAAC;IAC1D,4CAAe,CAAC;QACd,IAAI,KAAK,EAAE;YACT,QAAQ,CAAC,6EAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;gBACxC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC5B,QAAQ,CAAC,wEAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;gBACZ,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBAEzB,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC7B,IAAM,OAAO,GAAG,uEAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC7D,QAAQ,CAAC,sEAAc,CAAC,OAAO,CAAC,uBAAuB;oBACvD,mCAAmC;oBACnC,oBAAoB;oBACpB,MAAM;qBACL,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEZ,IAAI,CAAC,KAAK,IAAI,MAAM,KAAK,QAAQ,CAAC,OAAO,IAAI,MAAM,KAAK,QAAQ,CAAC,IAAI,EAAE;QACrE,OAAO,aAAa,iDAAmB,CAAC,uDAAQ,EAAE;YAChD,EAAE,EAAE,GAAG;YACP,MAAM,EAAE,KAAI;YACZ,QAAQ,EAAE;gBACR,QAAQ,EAAE,YAAY;gBACtB,UAAU,EAAE,EAAE;gBACd,YAAY,EAAE,EAAE;aACjB;SACF,CAAC,CAAC;KACJ;IAED,OAAO,aAAa,iDAAmB,CAAC,0DAAO,EAAE;QAC/C,MAAM,EAAE,KAAI;QACZ,QAAQ,EAAE;YACR,QAAQ,EAAE,YAAY;YACtB,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,CAAC;SAChB;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,+DAAe,iBAAiB,EAAC","sources":["webpack://mangane-fe/./app/soapbox/features/email_confirmation/index.tsx"],"sourcesContent":["var _jsxFileName = \"/home/runner/work/Mangane/Mangane/app/soapbox/features/email_confirmation/index.tsx\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport * as React from 'react';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Redirect } from 'react-router-dom';\nimport { confirmChangedEmail } from 'soapbox/actions/security';\nimport snackbar from 'soapbox/actions/snackbar';\nimport { Spinner } from 'soapbox/components/ui';\nimport { useAppDispatch } from 'soapbox/hooks';\nimport { buildErrorMessage } from 'soapbox/utils/errors';\nconst Statuses = {\n  IDLE: 'IDLE',\n  SUCCESS: 'SUCCESS',\n  FAIL: 'FAIL'\n};\nconst messages = defineMessages({\n  success: {\n    \"id\": \"email_confirmation.success\",\n    \"defaultMessage\": \"Your email has been confirmed!\"\n  }\n});\nconst token = new URLSearchParams(window.location.search).get('confirmation_token');\n\nconst EmailConfirmation = () => {\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n  const [status, setStatus] = React.useState(Statuses.IDLE);\n  React.useEffect(() => {\n    if (token) {\n      dispatch(confirmChangedEmail(token)).then(() => {\n        setStatus(Statuses.SUCCESS);\n        dispatch(snackbar.success(intl.formatMessage(messages.success)));\n      }).catch(error => {\n        setStatus(Statuses.FAIL);\n\n        if (error.response.data.error) {\n          const message = buildErrorMessage(error.response.data.error);\n          dispatch(snackbar.error(message // intl.formatMessage({\n          //   id: 'email_confirmation.fail',\n          //   defaultMessage,\n          // }),\n          ));\n        }\n      });\n    }\n  }, [token]);\n\n  if (!token || status === Statuses.SUCCESS || status === Statuses.FAIL) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default EmailConfirmation;"],"names":[],"sourceRoot":""}