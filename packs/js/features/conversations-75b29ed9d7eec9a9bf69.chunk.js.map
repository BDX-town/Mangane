{"version":3,"file":"packs/js/features/conversations-75b29ed9d7eec9a9bf69.chunk.js","mappings":"uSACgK,EADgK,SAAAA,GAAW,IAAAC,EAAoCD,EAAI,eAAzBE,EAAqBF,EAAI,SAAhBG,EAAYH,EAAI,WAAOI,GAAS,UAAuBC,GAAQ,UAAkB,GAA+B,SAAe,SAAAC,GAAQ,IAAMC,EAAaD,EAAME,cAAcC,MAAMC,MAAK,SAAAC,GAAG,OAAAA,EAAEC,KAAKX,KAAgB,MAAM,CAACY,SAASN,EAAaM,SAASC,KAAI,SAAAC,GAAW,OAAAT,EAAMO,SAASG,IAAID,EAAU,SAAOE,OAAOV,EAAaU,OAAOC,aAAaX,EAAaY,aAAa,SAA5RN,EAAQ,WAACI,EAAM,SAACC,EAAY,eAAmgB,OAAkB,OAAfA,EAA4B,MACn/B,OAAK,IAAgB,CAACN,GAAGM,EAAaD,OAAOA,EAAOG,cAAcP,EAASX,SAD4yB,WAAKA,EAASD,IAC9xBE,WAD20B,WAAKA,EAAWF,IAC3zBoB,QADqmB,WAAQJ,GAAQb,GAAS,QAAqBH,IAAkBI,EAAQiB,KAAK,aAAaC,OAAOL,QCAs+B,EAA94C,WAAK,IAAMd,GAAS,UAAuBoB,GAAI,IAAAC,QAAO,MAAYjB,GAAc,SAAe,SAAAF,GAAO,OAAAA,EAAME,cAAcC,SAAaiB,GAAU,SAAe,SAAApB,GAAO,OAAAA,EAAME,cAAckB,aAAiBC,EAAgB,SAAAf,GAAI,OAAAJ,EAAcoB,WAAU,SAAAjB,GAAG,OAAAA,EAAEC,KAAKA,MAAUiB,EAAa,SAAAjB,GAAK,IAAMkB,EAAaH,EAAgBf,GAAI,EAAEmB,EAAYD,IAAsBE,EAAe,SAAApB,GAAK,IAAMkB,EAAaH,EAAgBf,GAAI,EAAEmB,EAAYD,IAAsBC,EAAY,SAAAE,GAAQ,IAAIC,EAA0C,QAA5BA,EAAaV,EAAIW,eAAgC,IAAfD,GAA6BA,EAAaE,eAAe,CAACH,MAAK,EAACI,SAAS,SAASC,KAAK,WAAK,IAAMC,EAAQC,SAASC,cAAc,6BAA8BlB,OAAOU,EAAM,kBAAsBM,GAASA,EAAQG,YAAqBC,EAAgB,KAAS,WAAK,IAAMC,EAAMpC,EAAcqC,MAAM,EAAE,EAAE,OAAUD,GAAMxC,GAAS,QAAoB,CAACwC,MAAK,OAAM,IAAI,CAACE,SAAQ,IAAO,OAAmB,gBAAoB,IAAe,CAACC,WAAWJ,EAAgB/B,GAAG,cAAcoC,UAAU,SAASxB,IAAIA,EAAIE,UAAUA,EAAUuB,YAAYvB,GAAgC,IAArBlB,EAAc0C,KAASC,cAA0B,OAAK,IAAiB,CAACvC,GAAG,sBAAsBwC,eAAe,iGAAiG5C,EAAcM,KAAI,SAAAuC,GAAmB,cAAK,EAAa,CAACpD,eAAeoD,EAAKzC,GAAGV,SAAS2B,EAAa1B,WAAW6B,GAAgBqB,EAAKzC,SCAxvC0C,GAAS,QAAe,CAACC,MAAM,CAAC,GAAK,gBAAgB,eAAiB,mBAAmBC,kBAAkB,CAAC,GAAK,4BAA4B,eAAiB,wBAAqnB,EAA5jB,WAAK,IAAMC,GAAK,EAAAC,EAAA,KAAgBtD,GAAS,UAA6R,OAA5Q,IAAAuD,YAAU,WAAKvD,GAAS,WAAsBA,GAAS,WAAuB,IAAMwD,EAAWxD,GAAS,WAAuB,OAAM,WAAKA,GAAS,WAAwBwD,OAAiB,KAAmG,OAAK,KAAO,CAACC,MAAMJ,EAAKK,cAAcR,EAASC,aAAQ,GAAoB,OAAK,IAAc,CAACQ,YAAYN,EAAKK,cAAcR,EAASE,mBAAmBQ,WAAlO,SAAAjD,GAAYX,GAAS,QAAkBW,QAAsO,OAAK,EAAkB","sources":["webpack://mangane-fe/./app/soapbox/features/conversations/components/conversation.tsx","webpack://mangane-fe/./app/soapbox/features/conversations/components/conversations_list.tsx","webpack://mangane-fe/./app/soapbox/features/conversations/index.tsx"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import React from'react';import{useHistory}from'react-router-dom';import{markConversationRead}from'soapbox/actions/conversations';import StatusContainer from'soapbox/containers/status_container';import{useAppDispatch,useAppSelector}from'soapbox/hooks';const Conversation=_ref=>{let{conversationId,onMoveUp,onMoveDown}=_ref;const dispatch=useAppDispatch();const history=useHistory();const{accounts,unread,lastStatusId}=useAppSelector(state=>{const conversation=state.conversations.items.find(x=>x.id===conversationId);return{accounts:conversation.accounts.map(accountId=>state.accounts.get(accountId,null)),unread:conversation.unread,lastStatusId:conversation.last_status||null};});const handleClick=()=>{if(unread){dispatch(markConversationRead(conversationId));}history.push(\"/statuses/\".concat(lastStatusId));};const handleHotkeyMoveUp=()=>{onMoveUp(conversationId);};const handleHotkeyMoveDown=()=>{onMoveDown(conversationId);};if(lastStatusId===null){return null;}return/*#__PURE__*/ (// @ts-ignore\n_jsx(StatusContainer,{id:lastStatusId,unread:unread,otherAccounts:accounts,onMoveUp:handleHotkeyMoveUp,onMoveDown:handleHotkeyMoveDown,onClick:handleClick}));};export default Conversation;","import _jsx from\"@babel/runtime/helpers/esm/jsx\";import debounce from'lodash/debounce';import React,{useRef}from'react';import{FormattedMessage}from'react-intl';import{expandConversations}from'soapbox/actions/conversations';import ScrollableList from'soapbox/components/scrollable_list';import{useAppDispatch,useAppSelector}from'soapbox/hooks';import Conversation from'../components/conversation';const ConversationsList=()=>{const dispatch=useAppDispatch();const ref=useRef(null);const conversations=useAppSelector(state=>state.conversations.items);const isLoading=useAppSelector(state=>state.conversations.isLoading);const getCurrentIndex=id=>conversations.findIndex(x=>x.id===id);const handleMoveUp=id=>{const elementIndex=getCurrentIndex(id)-1;selectChild(elementIndex);};const handleMoveDown=id=>{const elementIndex=getCurrentIndex(id)+1;selectChild(elementIndex);};const selectChild=index=>{var _ref$current;(_ref$current=ref.current)===null||_ref$current===void 0?void 0:_ref$current.scrollIntoView({index,behavior:'smooth',done:()=>{const element=document.querySelector(\"#direct-list [data-index=\\\"\".concat(index,\"\\\"] .focusable\"));if(element){element.focus();}}});};const handleLoadOlder=debounce(()=>{const maxId=conversations.getIn([-1,'id']);if(maxId)dispatch(expandConversations({maxId}));},300,{leading:true});return/*#__PURE__*/React.createElement(ScrollableList,{onLoadMore:handleLoadOlder,id:\"direct-list\",scrollKey:\"direct\",ref:ref,isLoading:isLoading,showLoading:isLoading&&conversations.size===0,emptyMessage:/*#__PURE__*/_jsx(FormattedMessage,{id:\"empty_column.direct\",defaultMessage:\"You don't have any direct messages yet. When you send or receive one, it will show up here.\"})},conversations.map(item=>/*#__PURE__*/_jsx(Conversation,{conversationId:item.id,onMoveUp:handleMoveUp,onMoveDown:handleMoveDown},item.id)));};export default ConversationsList;","import _jsx from\"@babel/runtime/helpers/esm/jsx\";import React,{useEffect}from'react';import{defineMessages,useIntl}from'react-intl';import{directComposeById}from'soapbox/actions/compose';import{mountConversations,unmountConversations,expandConversations}from'soapbox/actions/conversations';import{connectDirectStream}from'soapbox/actions/streaming';import AccountSearch from'soapbox/components/account_search';import{Column}from'soapbox/components/ui';import{useAppDispatch}from'soapbox/hooks';import ConversationsList from'./components/conversations_list';const messages=defineMessages({title:{\"id\":\"column.direct\",\"defaultMessage\":\"Direct messages\"},searchPlaceholder:{\"id\":\"direct.search_placeholder\",\"defaultMessage\":\"Send a message to\\u2026\"}});const ConversationsTimeline=()=>{const intl=useIntl();const dispatch=useAppDispatch();useEffect(()=>{dispatch(mountConversations());dispatch(expandConversations());const disconnect=dispatch(connectDirectStream());return()=>{dispatch(unmountConversations());disconnect();};},[]);const handleSuggestion=accountId=>{dispatch(directComposeById(accountId));};return/*#__PURE__*/_jsx(Column,{label:intl.formatMessage(messages.title)},void 0,/*#__PURE__*/_jsx(AccountSearch,{placeholder:intl.formatMessage(messages.searchPlaceholder),onSelected:handleSuggestion}),/*#__PURE__*/_jsx(ConversationsList,{}));};export default ConversationsTimeline;"],"names":["_ref","conversationId","onMoveUp","onMoveDown","dispatch","history","state","conversation","conversations","items","find","x","id","accounts","map","accountId","get","unread","lastStatusId","last_status","otherAccounts","onClick","push","concat","ref","useRef","isLoading","getCurrentIndex","findIndex","handleMoveUp","elementIndex","selectChild","handleMoveDown","index","_ref$current","current","scrollIntoView","behavior","done","element","document","querySelector","focus","handleLoadOlder","maxId","getIn","leading","onLoadMore","scrollKey","showLoading","size","emptyMessage","defaultMessage","item","messages","title","searchPlaceholder","intl","useIntl","useEffect","disconnect","label","formatMessage","placeholder","onSelected"],"sourceRoot":""}