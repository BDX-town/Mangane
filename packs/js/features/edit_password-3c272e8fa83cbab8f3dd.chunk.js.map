{"version":3,"file":"packs/js/features/edit_password-3c272e8fa83cbab8f3dd.chunk.js","mappings":"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","sources":["webpack://mangane-fe/./app/soapbox/features/edit_password/index.tsx"],"sourcesContent":["import _jsx from\"@babel/runtime/helpers/esm/jsx\";import _defineProperty from\"@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import\"core-js/modules/web.dom-collections.iterator.js\";import\"core-js/modules/es.promise.finally.js\";import*as React from'react';import{defineMessages,useIntl}from'react-intl';import{logOut}from'soapbox/actions/auth';import{changePassword}from'soapbox/actions/security';import snackbar from'soapbox/actions/snackbar';import{Button,Card,CardBody,CardHeader,CardTitle,Column,Form,FormActions,FormGroup,Input}from'soapbox/components/ui';import{useAppDispatch,useFeatures}from'soapbox/hooks';import PasswordIndicator from'../verification/components/password-indicator';const messages=defineMessages({updatePasswordSuccess:{\"id\":\"security.update_password.success\",\"defaultMessage\":\"Password successfully updated.\"},updatePasswordFail:{\"id\":\"security.update_password.fail\",\"defaultMessage\":\"Update password failed.\"},oldPasswordFieldLabel:{\"id\":\"security.fields.old_password.label\",\"defaultMessage\":\"Current password\"},newPasswordFieldLabel:{\"id\":\"security.fields.new_password.label\",\"defaultMessage\":\"New password\"},confirmationFieldLabel:{\"id\":\"security.fields.password_confirmation.label\",\"defaultMessage\":\"New password (again)\"},header:{\"id\":\"edit_password.header\",\"defaultMessage\":\"Change Password\"},submit:{\"id\":\"security.submit\",\"defaultMessage\":\"Save changes\"},cancel:{\"id\":\"common.cancel\",\"defaultMessage\":\"Cancel\"}});const initialState={currentPassword:'',newPassword:'',newPasswordConfirmation:''};const EditPassword=()=>{const intl=useIntl();const dispatch=useAppDispatch();const{passwordRequirements}=useFeatures();const[state,setState]=React.useState(initialState);const[isLoading,setLoading]=React.useState(false);const[hasValidPassword,setHasValidPassword]=React.useState(passwordRequirements?false:true);const{currentPassword,newPassword,newPasswordConfirmation}=state;const resetState=()=>setState(initialState);const handleInputChange=React.useCallback(event=>{event.persist();setState(prevState=>_objectSpread(_objectSpread({},prevState),{},{[event.target.name]:event.target.value}));},[]);const handleSubmit=React.useCallback(()=>{setLoading(true);dispatch(changePassword(currentPassword,newPassword,newPasswordConfirmation)).then(async()=>{resetState();await dispatch(snackbar.success(intl.formatMessage(messages.updatePasswordSuccess)));dispatch(logOut());}).finally(()=>{setLoading(false);}).catch(()=>{resetState();dispatch(snackbar.error(intl.formatMessage(messages.updatePasswordFail)));});},[currentPassword,newPassword,newPasswordConfirmation,dispatch,intl]);return/*#__PURE__*/_jsx(Column,{label:intl.formatMessage(messages.header),transparent:true,withHeader:false},void 0,/*#__PURE__*/_jsx(Card,{variant:\"rounded\"},void 0,/*#__PURE__*/_jsx(CardHeader,{backHref:\"/settings\"},void 0,/*#__PURE__*/_jsx(CardTitle,{title:intl.formatMessage(messages.header)})),/*#__PURE__*/_jsx(CardBody,{},void 0,/*#__PURE__*/_jsx(Form,{onSubmit:handleSubmit},void 0,/*#__PURE__*/_jsx(FormGroup,{labelText:intl.formatMessage(messages.oldPasswordFieldLabel)},void 0,/*#__PURE__*/_jsx(Input,{type:\"password\",name:\"currentPassword\",onChange:handleInputChange,value:currentPassword})),/*#__PURE__*/_jsx(FormGroup,{labelText:intl.formatMessage(messages.newPasswordFieldLabel)},void 0,/*#__PURE__*/_jsx(Input,{type:\"password\",name:\"newPassword\",onChange:handleInputChange,value:newPassword}),passwordRequirements&&/*#__PURE__*/_jsx(PasswordIndicator,{password:newPassword,onChange:setHasValidPassword})),/*#__PURE__*/_jsx(FormGroup,{labelText:intl.formatMessage(messages.confirmationFieldLabel)},void 0,/*#__PURE__*/_jsx(Input,{type:\"password\",name:\"newPasswordConfirmation\",onChange:handleInputChange,value:newPasswordConfirmation})),/*#__PURE__*/_jsx(FormActions,{},void 0,/*#__PURE__*/_jsx(Button,{to:\"/settings\",theme:\"ghost\"},void 0,intl.formatMessage(messages.cancel)),/*#__PURE__*/_jsx(Button,{type:\"submit\",theme:\"primary\",disabled:isLoading||!hasValidPassword},void 0,intl.formatMessage(messages.submit)))))));};export default EditPassword;"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","messages","updatePasswordSuccess","updatePasswordFail","oldPasswordFieldLabel","newPasswordFieldLabel","confirmationFieldLabel","header","submit","cancel","initialState","currentPassword","newPassword","newPasswordConfirmation","intl","dispatch","passwordRequirements","state","setState","isLoading","setLoading","hasValidPassword","setHasValidPassword","resetState","handleInputChange","event","persist","prevState","name","value","handleSubmit","then","formatMessage","finally","catch","label","transparent","withHeader","variant","backHref","title","onSubmit","labelText","type","onChange","password","to","theme","disabled"],"sourceRoot":""}