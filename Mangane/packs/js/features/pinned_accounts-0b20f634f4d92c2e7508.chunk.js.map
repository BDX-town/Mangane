{"version":3,"file":"packs/js/features/pinned_accounts-0b20f634f4d92c2e7508.chunk.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA,sBAyFmC;AAzFnC,IAAI,YAAY,GAAG,gGAAgG,CAAC;AACtD;AACrB;AACK;AACiB;AAChB;AACqB;AACU;AACD;AACd;AAE/D,IAAM,mBAAmB,GAAG,cAAI;IAE5B,WAAO,GAEL,IAAI,QAFC,EACP,KAAK,GACH,IAAI,MADD,CACE;IACT,IAAM,QAAQ,GAAG,6DAAc,EAAE,CAAC;IAClC,IAAM,MAAM,GAAG,6DAAc,CAAC,eAAK;QACjC,IAAI,qBAAqB,CAAC;QAE1B,OAAO,CAAC,CAAC,qBAAqB,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,qBAAqB,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,qDAAmB,EAAE,CAAC;IAC1L,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACnB,gDAAS,CAAC;QACR,QAAQ,CAAC,6EAAmB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;QACpB,OAAO,aAAa,iDAAmB,CAAC,uFAAe,EAAE;YACvD,cAAc,EAAE,uFAAgB;YAChC,MAAM,EAAE,KAAI;YACZ,QAAQ,EAAE;gBACR,QAAQ,EAAE,YAAY;gBACtB,UAAU,EAAE,EAAE;gBACd,YAAY,EAAE,CAAC;aAChB;SACF,EAAE,mBAAS,IAAI,aAAa,wDAAmB,CAAC,SAAS,EAAE;YAC1D,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,KAAI;YACZ,QAAQ,EAAE;gBACR,QAAQ,EAAE,YAAY;gBACtB,UAAU,EAAE,EAAE;gBACd,YAAY,EAAE,EAAE;aACjB;SACF,CAAC,EAR2B,CAQ3B,CAAC,CAAC;KACL;IAED,OAAO,aAAa,iDAAmB,CAAC,yDAAM,EAAE;QAC9C,KAAK,EAAE,aAAa,iDAAmB,CAAC,kDAAgB,EAAE;YACxD,EAAE,EAAE,uBAAuB;YAC3B,cAAc,EAAE,uBAAuB;YACvC,MAAM,EAAE;gBACN,IAAI,EAAE,aAAa,iDAAmB,CAAC,MAAM,EAAE;oBAC7C,uBAAuB,EAAE;wBACvB,MAAM,EAAE,OAAO,CAAC,iBAAiB;qBAClC;oBACD,MAAM,EAAE,KAAI;oBACZ,QAAQ,EAAE;wBACR,QAAQ,EAAE,YAAY;wBACtB,UAAU,EAAE,EAAE;wBACd,YAAY,EAAE,EAAE;qBACjB;iBACF,CAAC;aACH;YACD,MAAM,EAAE,KAAI;YACZ,QAAQ,EAAE;gBACR,QAAQ,EAAE,YAAY;gBACtB,UAAU,EAAE,EAAE;gBACd,YAAY,EAAE,EAAE;aACjB;SACF,CAAC;QACF,MAAM,EAAE,KAAI;QACZ,QAAQ,EAAE;YACR,QAAQ,EAAE,YAAY;YACtB,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,CAAC;SAChB;KACF,EAAE,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC,oBAAU,IAAI,aAAa,wDAAmB,CAAC,4EAAgB,EAAE;QACvF,GAAG,EAAE,UAAU;QACf,EAAE,EAAE,UAAU;QACd,gBAAgB,EAAE,KAAK;QACvB,MAAM,EAAE,KAAI;QACZ,QAAQ,EAAE;YACR,QAAQ,EAAE,YAAY;YACtB,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,CAAC;SAChB;KACF,CAAC,EAViD,CAUjD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF,+DAAe,mBAAmB,EAAC","sources":["webpack://mangane-fe/./app/soapbox/features/ui/components/pinned_accounts_panel.tsx"],"sourcesContent":["var _jsxFileName = \"/home/runner/work/Mangane/Mangane/app/soapbox/features/ui/components/pinned_accounts_panel.tsx\";\nimport { OrderedSet as ImmutableOrderedSet } from 'immutable';\nimport React, { useEffect } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { fetchPinnedAccounts } from 'soapbox/actions/accounts';\nimport { Widget } from 'soapbox/components/ui';\nimport AccountContainer from 'soapbox/containers/account_container';\nimport BundleContainer from 'soapbox/features/ui/containers/bundle_container';\nimport { WhoToFollowPanel } from 'soapbox/features/ui/util/async-components';\nimport { useAppDispatch, useAppSelector } from 'soapbox/hooks';\n\nconst PinnedAccountsPanel = _ref => {\n  let {\n    account,\n    limit\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const pinned = useAppSelector(state => {\n    var _state$user_lists$pin;\n\n    return ((_state$user_lists$pin = state.user_lists.pinned.get(account.id)) === null || _state$user_lists$pin === void 0 ? void 0 : _state$user_lists$pin.items) || ImmutableOrderedSet();\n  }).slice(0, limit);\n  useEffect(() => {\n    dispatch(fetchPinnedAccounts(account.id));\n  }, []);\n\n  if (pinned.isEmpty()) {\n    return /*#__PURE__*/React.createElement(BundleContainer, {\n      fetchComponent: WhoToFollowPanel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, Component => /*#__PURE__*/React.createElement(Component, {\n      limit: limit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 23\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Widget, {\n    title: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"pinned_accounts.title\",\n      defaultMessage: \"{name}\\u2019s choices\",\n      values: {\n        name: /*#__PURE__*/React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: account.display_name_html\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, pinned && pinned.map(suggestion => /*#__PURE__*/React.createElement(AccountContainer, {\n    key: suggestion,\n    id: suggestion,\n    withRelationship: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PinnedAccountsPanel;"],"names":[],"sourceRoot":""}